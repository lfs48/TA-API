generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  PENDING
  ACCEPTED
  REJECTED
}

model User {
  id       String @id @default(uuid())
  username String @unique
  password String

  gmGames     Game[] @relation("GM Games")
  playerGames Game[] @relation("Player")

  agents Agent[] @relation("Player")

  invitesReceived Invite[] @relation("Invitee")
  invitesSent     Invite[] @relation("Inviter")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Game {
  id          String  @id @default(uuid())
  title       String
  description String?
  active      Boolean @default(true)
  passphrase  String  @unique

  gm   User?  @relation("GM Games", fields: [gmID], references: [id])
  gmID String

  players User[] @relation("Player")

  invites Invite[]

  agents Agent[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Invite {
  id String @id @default(uuid())

  game   Game   @relation(fields: [gameId], references: [id])
  gameId String

  invitee   User   @relation("Invitee", fields: [inviteeId], references: [id])
  inviteeId String

  inviter   User   @relation("Inviter", fields: [inviterId], references: [id])
  inviterId String

  status Status @default(PENDING)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Agent {
  id String @id @default(uuid())
  name String @default("")

  game   Game   @relation(fields: [gameId], references: [id])
  gameId String

  player User @relation("Player", fields: [playerId], references: [id])
  playerId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}